function copyAddress() {
    const tokenAddress = document.getElementById('tokenAddress').textContent;
    navigator.clipboard.writeText(tokenAddress)
        .then(() => {
            alert('Token address copied!');
        })
        .catch(err => {
            console.error('Copy error: ', err);
        });
}

// –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–≥–∏–∫—É –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
document.addEventListener("DOMContentLoaded", function() {
    const reveals = document.querySelectorAll('.reveal');
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ –ø–æ—è–≤–ª–µ–Ω–∏–µ–º
                setTimeout(() => {
                    entry.target.classList.add('active');
                }, 100);
                
                // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ø–æ—è–≤–ª–µ–Ω–∏—è
                // observer.unobserve(entry.target);
            }
        });
    }, {
        threshold: 0.15 // –≠–ª–µ–º–µ–Ω—Ç –ø–æ—è–≤–∏—Ç—Å—è –∫–æ–≥–¥–∞ 15% –µ–≥–æ –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ
    });

    reveals.forEach(element => {
        observer.observe(element);
    });
});

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ
document.addEventListener('DOMContentLoaded', function() {
    const video = document.getElementById('hero-video');
    const preloader = document.querySelector('.video-preloader');
    let isVideoLoaded = false;

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
    function checkVideoPlayback() {
        if (video.readyState >= 3 && !isVideoLoaded) {
            isVideoLoaded = true;
            video.classList.add('loaded');
            preloader.classList.add('hidden');
        }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    video.addEventListener('loadeddata', checkVideoPlayback);
    video.addEventListener('canplay', checkVideoPlayback);
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏
    video.addEventListener('error', (e) => {
        console.error('Video loading error:', e);
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ–ª–ª–±—ç–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        video.style.display = 'none';
        document.querySelector('.hero-image').style.display = 'block';
        preloader.classList.add('hidden');
    });

    // –ï—Å–ª–∏ –≤–∏–¥–µ–æ —É–∂–µ –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω–æ
    if (video.readyState >= 3) {
        checkVideoPlayback();
    }

    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    if (window.matchMedia('(max-width: 768px)').matches) {
        video.setAttribute('poster', video.poster); // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å—Ç–µ—Ä–∞
    }
});

// –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º—É–∑—ã–∫–æ–π
document.addEventListener('DOMContentLoaded', function() {
    const music = document.getElementById('background-music');
    const musicToggle = document.getElementById('music-toggle');
    const musicIcon = musicToggle.querySelector('.music-icon');
    
    let isMusicPlaying = false;

    // –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ
    console.log('Audio element:', music);
    console.log('Audio source:', music.querySelector('source').src);

    music.addEventListener('loadeddata', () => {
        console.log('Audio loaded successfully');
    });

    music.addEventListener('error', (e) => {
        console.error('Audio loading error:', e);
    });

    async function toggleMusic() {
        try {
            if (isMusicPlaying) {
                await music.pause();
                musicIcon.textContent = 'üîà';
                console.log('Music paused');
            } else {
                const playPromise = music.play();
                if (playPromise !== undefined) {
                    playPromise.then(() => {
                        musicIcon.textContent = 'üîä';
                        console.log('Music playing');
                    }).catch(error => {
                        console.error('Playback error:', error);
                    });
                }
            }
            isMusicPlaying = !isMusicPlaying;
        } catch (error) {
            console.error('Toggle music error:', error);
        }
    }

    musicToggle.addEventListener('click', toggleMusic);

    // –ü–µ—Ä–≤–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    const startPlayback = async () => {
        try {
            await toggleMusic();
            document.removeEventListener('click', startPlayback);
        } catch (error) {
            console.error('Initial playback error:', error);
        }
    };

    document.addEventListener('click', startPlayback, { once: true });
});

// –û–±–Ω–æ–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è –æ–≥—É—Ä–µ—á–Ω–æ–≥–æ –¥–æ–∂–¥—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
function createCucumberRain() {
    const container = document.getElementById('cucumberRain');
    const cucumberImagePath = '/static/images/cucumber.png';
    const isMobile = window.matchMedia('(max-width: 768px)').matches;

    function createCucumber() {
        const cucumber = document.createElement('img');
        cucumber.src = cucumberImagePath;
        cucumber.classList.add('falling-cucumber');
        
        // –£–º–µ–Ω—å—à–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –∏ —Å–∫–æ—Ä–æ—Å—Ç—å –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
        const size = isMobile ? 
            (Math.random() * 30 + 20) : // 20-50px –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
            (Math.random() * 60 + 40);  // 40-100px –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞
        
        const startPosition = Math.random() * window.innerWidth;
        const duration = isMobile ?
            (Math.random() * 2 + 1) : // 1-3 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
            (Math.random() * 3 + 2);  // 2-5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞

        const rotation = Math.random() * 360;

        cucumber.style.left = `${startPosition}px`;
        cucumber.style.width = `${size}px`;
        cucumber.style.animationDuration = `${duration}s`;
        cucumber.style.transform = `rotate(${rotation}deg)`;

        container.appendChild(cucumber);

        cucumber.addEventListener('animationend', () => {
            cucumber.remove();
        });
    }

    // –£–º–µ–Ω—å—à–∞–µ–º —á–∞—Å—Ç–æ—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è –æ–≥—É—Ä—Ü–æ–≤ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
    const interval = isMobile ? 500 : 300; // ms
    return setInterval(createCucumber, interval);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–≥—É—Ä–µ—á–Ω—ã–π –¥–æ–∂–¥—å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', createCucumberRain);

// –î–æ–±–∞–≤–ª—è–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–∂–¥–µ–º —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
function toggleCucumberRain() {
    const container = document.getElementById('cucumberRain');
    if (container.style.display === 'none') {
        container.style.display = 'block';
        createCucumberRain();
    } else {
        container.style.display = 'none';
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –æ–≥—É—Ä—Ü–æ–≤
        clearInterval(rainInterval);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —è–∑—ã–∫–∞
function switchLanguage(lang) {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫
    localStorage.setItem('selectedLanguage', lang);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
    document.querySelectorAll('.lang-btn').forEach(btn => {
        btn.classList.toggle('active', btn.dataset.lang === lang);
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –ø–µ—Ä–µ–≤–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    document.querySelectorAll('[data-translate]').forEach(element => {
        const key = element.dataset.translate;
        if (translations[lang] && translations[lang][key]) {
            if (element.tagName === 'INPUT' || element.tagName === 'TEXTAREA') {
                element.placeholder = translations[lang][key];
            } else {
                element.textContent = translations[lang][key];
            }
        }
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —è–∑—ã–∫–∞ - —Ç–µ–ø–µ—Ä—å –≤—Å–µ–≥–¥–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
document.addEventListener('DOMContentLoaded', function() {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫
    const elements = document.querySelectorAll('[data-translate]');
    elements.forEach(element => {
        const key = element.dataset.translate;
        if (translations['en'][key]) {
            if (element.tagName === 'INPUT' || element.tagName === 'TEXTAREA') {
                element.placeholder = translations['en'][key];
            } else {
                element.textContent = translations['en'][key];
            }
        }
    });
});

// Mobile menu handling
document.addEventListener('DOMContentLoaded', function() {
    // ...existing code...

    // –£–¥–∞–ª—è–µ–º –≤–µ—Å—å –∫–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
    /*
    const menuTrigger = document.getElementById('menuTrigger');
    const mobileMenu = document.getElementById('mobileMenu');
    
    menuTrigger.addEventListener('click', () => {
        menuTrigger.classList.toggle('active');
        mobileMenu.classList.toggle('active');
    });

    // Close menu on link click
    document.querySelectorAll('.navbar-links a').forEach(link => {
        link.addEventListener('click', () => {
            menuTrigger.classList.remove('active');
            mobileMenu.classList.remove('active');
        });
    });
    */

    // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
    if (window.matchMedia('(max-width: 768px)').matches) {
        const video = document.getElementById('hero-video');
        if (video) {
            video.setAttribute('playsinline', '');
            video.setAttribute('preload', 'metadata');
        }
    }

    // Optimize scroll performance
    let ticking = false;
    window.addEventListener('scroll', () => {
        if (!ticking) {
            window.requestAnimationFrame(() => {
                handleScroll();
                ticking = false;
            });
            ticking = true;
        }
    });

    // Touch event handlers
    document.querySelectorAll('.feature, .tokenomics-item, .roadmap-item').forEach(item => {
        item.addEventListener('touchstart', () => {
            item.classList.add('touch-active');
        }, { passive: true });

        item.addEventListener('touchend', () => {
            item.classList.remove('touch-active');
        }, { passive: true });
    });
});

// –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    // ...existing code...

    // –ò–∑–º–µ–Ω—è–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    if (window.matchMedia('(max-width: 768px)').matches) {
        const video = document.getElementById('hero-video');
        if (video) {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é –≤–∏–¥–µ–æ
            video.src = '/static/videos/cucuanimation.MP4';
            
            video.setAttribute('playsinline', '');
            video.setAttribute('preload', 'metadata');
        }

        // –í–∫–ª—é—á–∞–µ–º –æ–≥—É—Ä–µ—á–Ω—ã–π –¥–æ–∂–¥—å —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        const rainInterval = createCucumberRain();
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        window.rainInterval = rainInterval;
    }
});

// –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –æ–≥—É—Ä–µ—á–Ω–æ–≥–æ –¥–æ–∂–¥—è
function createCucumberRain() {
    const container = document.getElementById('cucumberRain');
    const isMobile = window.matchMedia('(max-width: 768px)').matches;
    
    function createCucumber() {
        const cucumber = document.createElement('img');
        cucumber.src = '/static/images/cucumber.png';
        cucumber.classList.add('falling-cucumber');
        
        // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
        const size = isMobile ? 
            (Math.random() * 30 + 38) : // 38-68px –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
            (Math.random() * 60 + 40);  // 40-100px –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞
        
        const startPosition = Math.random() * window.innerWidth;
        const duration = isMobile ? 
            (Math.random() * 1.5 + 1) : // 1-2.5 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
            (Math.random() * 3 + 2);    // 2-5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞

        cucumber.style.cssText = `
            left: ${startPosition}px;
            width: ${size}px;
            animation-duration: ${duration}s;
            transform: rotate(${Math.random() * 360}deg);
        `;

        container.appendChild(cucumber);
        
        // –£–¥–∞–ª—è–µ–º –æ–≥—É—Ä–µ—Ü –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
        cucumber.addEventListener('animationend', () => cucumber.remove());
    }

    // –†–µ–≥—É–ª–∏—Ä—É–µ–º —á–∞—Å—Ç–æ—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è –æ–≥—É—Ä—Ü–æ–≤
    return setInterval(createCucumber, isMobile ? 800 : 300);
}

// –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –≤–∏–¥–µ–æ –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
/*
document.addEventListener('DOMContentLoaded', function() {
    // ...existing code...
    // video.src = '/static/videos/cucuanimation.MP4';
    // ...existing code...
});
*/

// ...existing code...